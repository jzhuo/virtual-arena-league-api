{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./libs/dynamodb-lib.js","webpack:///./libs/response-lib.js","webpack:///./update.js","webpack:///external \"aws-sdk\""],"names":["AWS","config","update","region","call","action","params","dynamoDb","DynamoDB","DocumentClient","promise","success","body","buildResponse","failure","statusCode","headers","JSON","stringify","main","event","context","callback","data","parse","TableName","Key","userId","requestContext","identity","cognitoIdentityId","tournamentId","pathParameters","id","UpdateExpression","ExpressionAttributeValues","attachment","content","ReturnValues","result","status","e"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;AClFA;;AAEA,8CAAAA,CAAIC,MAAJ,CAAWC,MAAX,CAAkB,EAAEC,QAAQ,WAAV,EAAlB;;AAEO,SAASC,IAAT,CAAcC,MAAd,EAAsBC,MAAtB,EAA8B;AACnC,QAAMC,WAAW,IAAI,8CAAAP,CAAIQ,QAAJ,CAAaC,cAAjB,EAAjB;;AAEA,SAAOF,SAASF,MAAT,EAAiBC,MAAjB,EAAyBI,OAAzB,EAAP;AACD,C;;;;;;;;;;;;;;;ACRM,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B,WAAOC,cAAc,GAAd,EAAmBD,IAAnB,CAAP;AACH;;AAEM,SAASE,OAAT,CAAiBF,IAAjB,EAAuB;AAC1B,WAAOC,cAAc,GAAd,EAAmBD,IAAnB,CAAP;AACH;;AAED,SAASC,aAAT,CAAuBE,UAAvB,EAAmCH,IAAnC,EAAyC;AACrC,WAAO;AACHG,oBAAYA,UADT;AAEHC,iBAAS;AACT,2CAA+B,GADtB;AAET,gDAAoC;AAF3B,SAFN;AAMHJ,cAAMK,KAAKC,SAAL,CAAeN,IAAf;AANH,KAAP;AAQH,C;;;;;;;;;;;;;;;;ACjBD;AACA;;AAEO,eAAeO,IAAf,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AACnD,QAAMC,OAAON,KAAKO,KAAL,CAAWJ,MAAMR,IAAjB,CAAb;AACA,QAAMN,SAAS;AACbmB,eAAW,aADE;AAEb;AACA;AACA;AACAC,SAAK;AACHC,cAAQP,MAAMQ,cAAN,CAAqBC,QAArB,CAA8BC,iBADnC;AAEHC,oBAAcX,MAAMY,cAAN,CAAqBC;AAFhC,KALQ;AASb;AACA;AACAC,sBAAkB,kDAXL;AAYbC,+BAA2B;AACzB,qBAAeZ,KAAKa,UAAL,GAAkBb,KAAKa,UAAvB,GAAoC,IAD1B;AAEzB,kBAAYb,KAAKc,OAAL,GAAed,KAAKc,OAApB,GAA8B;AAFjB,KAZd;AAgBbC,kBAAc;AAhBD,GAAf;;AAmBA,MAAI;AACF,UAAMC,SAAS,MAAM,wDAAiB,QAAjB,EAA2BjC,MAA3B,CAArB;AACAgB,aAAS,IAAT,EAAe,kEAAAX,CAAQ,EAAE6B,QAAQ,IAAV,EAAR,CAAf;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVnB,aAAS,IAAT,EAAe,kEAAAR,CAAQ,EAAE0B,QAAQ,KAAV,EAAR,CAAf;AACD;AACF,C;;;;;;;;;;;AC9BD,oC","file":"update.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./update.js\");\n","import AWS from \"aws-sdk\";\n\nAWS.config.update({ region: \"us-east-2\" });\n\nexport function call(action, params) {\n  const dynamoDb = new AWS.DynamoDB.DocumentClient();\n\n  return dynamoDb[action](params).promise();\n}","export function success(body) {\n    return buildResponse(200, body);\n}\n  \nexport function failure(body) {\n    return buildResponse(500, body);\n}\n  \nfunction buildResponse(statusCode, body) {\n    return {\n        statusCode: statusCode,\n        headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": true\n        },\n        body: JSON.stringify(body)\n    };\n}","import * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\n\nexport async function main(event, context, callback) {\n  const data = JSON.parse(event.body);\n  const params = {\n    TableName: \"tournaments\",\n    // 'Key' defines the partition key and sort key of the item to be updated\n    // - 'userId': Identity Pool identity id of the authenticated user\n    // - 'tournamentId': path parameter\n    Key: {\n      userId: event.requestContext.identity.cognitoIdentityId,\n      tournamentId: event.pathParameters.id\n    },\n    // 'UpdateExpression' defines the attributes to be updated\n    // 'ExpressionAttributeValues' defines the value in the update expression\n    UpdateExpression: \"SET content = :content, attachment = :attachment\",\n    ExpressionAttributeValues: {\n      \":attachment\": data.attachment ? data.attachment : null,\n      \":content\": data.content ? data.content : null\n    },\n    ReturnValues: \"ALL_NEW\"\n  };\n\n  try {\n    const result = await dynamoDbLib.call(\"update\", params);\n    callback(null, success({ status: true }));\n  } catch (e) {\n    callback(null, failure({ status: false }));\n  }\n}","module.exports = require(\"aws-sdk\");"],"sourceRoot":""}